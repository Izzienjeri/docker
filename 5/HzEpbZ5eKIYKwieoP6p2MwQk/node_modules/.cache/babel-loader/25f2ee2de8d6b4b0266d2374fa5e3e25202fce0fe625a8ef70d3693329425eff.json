{"ast":null,"code":"import React, { isValidElement } from \"react\";\nexport default function PublicWrapper({\n  children,\n  session\n}) {\n  if (!children) {\n    throw new Error(\"Invalid children: children must be a valid React element.\");\n  }\n  const processChild = child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (child.type === React.Fragment) {\n      const element = child;\n      return React.Children.map(element.props.children, processChild);\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      session,\n      \"data-session\": JSON.stringify(session)\n    });\n  };\n  const processedChildren = React.Children.map(children, processChild);\n  const firstChild = processedChildren === null || processedChildren === void 0 ? void 0 : processedChildren[0];\n  if ((processedChildren === null || processedChildren === void 0 ? void 0 : processedChildren.length) === 1 && /*#__PURE__*/isValidElement(firstChild)) {\n    return firstChild;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, processedChildren);\n}\n_c = PublicWrapper;\nmodule.exports = {\n  extractNumberFromCite\n};\nvar _c;\n$RefreshReg$(_c, \"PublicWrapper\");","map":{"version":3,"names":["React","isValidElement","PublicWrapper","children","session","Error","processChild","child","type","Fragment","element","Children","map","props","cloneElement","JSON","stringify","processedChildren","firstChild","length","createElement","_c","module","exports","extractNumberFromCite","$RefreshReg$"],"sources":["/home/izzie/dev/docker/5/HzEpbZ5eKIYKwieoP6p2MwQk/src/solution.tsx"],"sourcesContent":["import React, { ReactNode, ReactElement, isValidElement } from \"react\";\nimport { Session } from \"./index\"; \ninterface WithSession {\n  session: Session;\n  \"data-session\": string;\n}\n\nexport default function PublicWrapper({\n  children,\n  session,\n}: {\n  children: ReactNode;\n  session: Session;\n}) {\n  if (!children) {\n    throw new Error(\"Invalid children: children must be a valid React element.\");\n  }\n\n  const processChild = (child: ReactNode): ReactNode => {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (child.type === React.Fragment) {\n      const element = child as ReactElement<{ children?: ReactNode }>;\n      return React.Children.map(element.props.children, processChild);\n    }\n\n    return React.cloneElement<WithSession>(\n      child as ReactElement<WithSession>,\n      {\n        session,\n        \"data-session\": JSON.stringify(session)\n      }\n    );\n  };\n\n  const processedChildren = React.Children.map(children, processChild);\n\n  const firstChild = processedChildren?.[0]\n  if (processedChildren?.length === 1 && isValidElement(firstChild)) {\n      return firstChild;\n  }\n\n  return React.createElement(React.Fragment, null, processedChildren);\n}\n\nmodule.exports = {extractNumberFromCite};"],"mappings":"AAAA,OAAOA,KAAK,IAA6BC,cAAc,QAAQ,OAAO;AAOtE,eAAe,SAASC,aAAaA,CAAC;EACpCC,QAAQ;EACRC;AAIF,CAAC,EAAE;EACD,IAAI,CAACD,QAAQ,EAAE;IACb,MAAM,IAAIE,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EAEA,MAAMC,YAAY,GAAIC,KAAgB,IAAgB;IACpD,IAAI,eAACP,KAAK,CAACC,cAAc,CAACM,KAAK,CAAC,EAAE;MAChC,OAAO,IAAI;IACb;IAEA,IAAIA,KAAK,CAACC,IAAI,KAAKR,KAAK,CAACS,QAAQ,EAAE;MACjC,MAAMC,OAAO,GAAGH,KAA+C;MAC/D,OAAOP,KAAK,CAACW,QAAQ,CAACC,GAAG,CAACF,OAAO,CAACG,KAAK,CAACV,QAAQ,EAAEG,YAAY,CAAC;IACjE;IAEA,oBAAON,KAAK,CAACc,YAAY,CACvBP,KAAK,EACL;MACEH,OAAO;MACP,cAAc,EAAEW,IAAI,CAACC,SAAS,CAACZ,OAAO;IACxC,CACF,CAAC;EACH,CAAC;EAED,MAAMa,iBAAiB,GAAGjB,KAAK,CAACW,QAAQ,CAACC,GAAG,CAACT,QAAQ,EAAEG,YAAY,CAAC;EAEpE,MAAMY,UAAU,GAAGD,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAG,CAAC,CAAC;EACzC,IAAI,CAAAA,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEE,MAAM,MAAK,CAAC,iBAAIlB,cAAc,CAACiB,UAAU,CAAC,EAAE;IAC/D,OAAOA,UAAU;EACrB;EAEA,oBAAOlB,KAAK,CAACoB,aAAa,CAACpB,KAAK,CAACS,QAAQ,EAAE,IAAI,EAAEQ,iBAAiB,CAAC;AACrE;AAACI,EAAA,GAtCuBnB,aAAa;AAwCrCoB,MAAM,CAACC,OAAO,GAAG;EAACC;AAAqB,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}